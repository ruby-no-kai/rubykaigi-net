<%-

  subnets = {
    'ap-northeast-1c' => %w[10.33.160.0/23],
    'ap-northeast-1d' => %w[10.33.162.0/23],
  }

  overlay_prefix = '2001:df0:8500:ca60::/64'

  az = node[:ec2][:placement].fetch('availability-zone')
  vpc_ipv4 = node[:ec2].fetch('local-ipv4')
  vpc_ipv6 = node[:ec2].fetch(:ipv6)

  v6gw_peers = %w[2406:da14:dfe:c0c1:0:0:66:1 2406:da14:dfe:c0d1:0:0:66:1]
  v6gw_peers.delete(vpc_ipv6)

  az_nibble = {'ap-northeast-1c' => 1, 'ap-northeast-1d' => 2}.fetch(az)
  br_peers = {
    hnd: {ipv6: "2001:df0:8500:ca22:66#{az_nibble}1::a", asn: 65001},
    nrt: {ipv6: "2001:df0:8500:ca22:66#{az_nibble}2::a", asn: 65002},
  }
-%>
frr version 8.4.4
frr defaults traditional
hostname ip-10-33-136-182
log syslog
service integrated-vtysh-config
!
vrf vrf-v6gw
<%- subnets.fetch(az).each do |subnet| -%>
 ipv6 route 2001:df0:8500:ca60::<%= subnet.sub(%r{/(\d+)}) { ?/ + ($1.to_i + 96).to_s } %> br-66
<%- end -%>
exit-vrf
!
interface tun-hnd
 ipv6 address 2001:df0:8500:ca22:66<%= az_nibble %>1::b/124
exit
!
interface tun-nrt
 ipv6 address 2001:df0:8500:ca22:66<%= az_nibble %>2::b/124
exit
!
router bgp 64566
 bgp router-id <%= vpc_ipv4 %>
 bgp log-neighbor-changes
 no bgp default ipv4-unicast
 !
 neighbor client-azc peer-group
 neighbor client-azc remote-as 64567
 neighbor client-azc timers 10 30
 neighbor client-azc capability extended-nexthop
<%- subnets.fetch('ap-northeast-1c').each do |subnet| -%>
 bgp listen range <%= subnet %> peer-group client-azc
<%- end -%>
 !
 neighbor client-azd peer-group
 neighbor client-azd remote-as 64567
 neighbor client-azd timers 10 30
 neighbor client-azd capability extended-nexthop
<%- subnets.fetch('ap-northeast-1d').each do |subnet| -%>
 bgp listen range <%= subnet %> peer-group client-azd
<%- end -%>
 !
 neighbor v6gw peer-group
 neighbor v6gw remote-as 64566
 neighbor v6gw timers 10 30
 neighbor v6gw capability extended-nexthop
<%- v6gw_peers.each do |peer| -%>
 neighbor <%= peer %> peer-group v6gw
<%- end -%>
 !
 address-family ipv6 unicast
  neighbor v6gw activate
  neighbor client-azc activate
  neighbor client-azc prefix-list default out
  neighbor client-azd activate
  neighbor client-azd prefix-list default out
 exit-address-family
 !
 address-family l2vpn evpn
  neighbor v6gw activate
  neighbor client-azc activate
  neighbor client-azc route-map evpn in
  neighbor client-azc route-map evpn out
  neighbor client-azd activate
  neighbor client-azd route-map evpn in
  neighbor client-azd route-map evpn out
  advertise-all-vni
  advertise-svi-ip
 exit-address-family
exit
!
router bgp 64566 vrf vrf-v6gw
 bgp router-id <%= vpc_ipv4 %>
 bgp log-neighbor-changes
 no bgp default ipv4-unicast
 !
 neighbor br peer-group
 neighbor br timers 10 30
<%- br_peers.each do |name, peer| -%>
 neighbor <%= peer.fetch(:ipv6) %> peer-group br
 neighbor <%= peer.fetch(:ipv6) %> remote-as <%= peer.fetch(:asn) %>
<%- end -%>
 !
 address-family ipv6 unicast
  network 2001:df0:8500:ca60::/64
  redistribute static route-map overlay-subnet
  neighbor br activate
  neighbor br prefix-list default in
  neighbor br prefix-list overlay out
<%- br_peers.each do |name, peer| -%>
  neighbor <%= peer.fetch(:ipv6) %> route-map br-<%= name %>-in in
  neighbor <%= peer.fetch(:ipv6) %> route-map br-<%= name %>-out out
<%- end -%>
 exit-address-family
exit
!
ipv6 prefix-list default seq 5 permit ::/0 ge 0 le 0
ipv6 prefix-list overlay seq 5 permit 2001:df0:8500:ca60::/64 ge 64
!
route-map br-hnd-in permit 10
 set local-preference 200
exit
!
route-map br-hnd-out permit 10
 set metric 0
exit
!
route-map br-nrt-in permit 10
 set local-preference 100
exit
!
route-map br-nrt-out permit 10
 set metric 100
exit
!
route-map overlay-subnet permit 10
 match ipv6 address prefix-list overlay
exit
!
route-map evpn permit 10
exit
!
ip nht resolve-via-default
!
ipv6 nht resolve-via-default
!
